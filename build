#!/bin/bash

# Bomb out on any errors
set -e 

# Setup the environment
export HOME=/home/admin
export PATH=$PATH:$HOME/droid/bin
export ANDROID_NDK=~/droid/android-ndk
export TARGET=/target

# Update from our repo
cd $HOME/droid/bin && git pull https://github.com/sonelli/android-ports-tools.git master

# Download the latest version of coreutils
if [ ! -f ~/coreutils-8.22.tar.xz ]; then
    wget -O ~/coreutils-8.22.tar.xz http://ftp.gnu.org/gnu/coreutils/coreutils-8.22.tar.xz
fi

for ARCH_NAME in x86 arm mips; do
    export ARCH_NAME

    for BIN_TYPE in pie nopie; do

        #Â Start each build with a fresh source copy
        cd ~
        rm -rf ~/coreutils-8.22
        tar xvf ~/coreutils-8.22.tar.xz
        cd ~/coreutils-8.22

        case "$ARCH_NAME" in
            
            x86)
                echo "Compiling for x86"
                HOST=i686-linux-android
                ;;
            arm)
                echo "Compiling for ARM"
                HOST=arm-linux
                ;;
            mips)
                echo "Compiling for MIPS"
                HOST=mipsel-linux-android
                ;;

        esac

        export CC=~/droid/bin/agcc
        
        if [ $BIN_TYPE == "pie" ]; then
            export CFLAGS="-g -O2 -pie -fPIE"
            # Use default target for pie binaries (currently 15/ICS)
            unset GOOGLE_PLATFORM
        else 
            export CFLAGS="-g -O2"
            export GOOGLE_PLATFORM=9
        fi


        export FORCE_UNSAFE_CONFIGURE=1
        sed -i 's/as_fn_error $? "could not determine.*/false/g' configure
        ./configure --host=$HOST --with-gnu-ld=ald
        echo "#define HAVE_MKFIFO 1" >> lib/config.h

        sed -i 's/pw->pw_gecos/""/g' src/pinky.c
        sed -i 's/sys\/mtio.h/linux\/mtio.h/g' src/dd.c
        sed -i 's/#define PROGRAM_NAME "du"/#define PROGRAM_NAME "du"\n#define read_file_system_list(bool) 0/g' src/du.c
        sed -i 's/#define PROGRAM_NAME "stat"/#define PROGRAM_NAME "stat"\n#define read_file_system_list(bool) 0/g' src/stat.c
        sed -i 's/ fts_open /_fts_open /g' lib/xfts.c
        sed -i 's/^fts_open /_fts_open /g' lib/fts.c
        sed -i 's/^MANS = .*//g' Makefile
        
        make

        for MODULE in $(cat ~/modules); do
            echo "Processing $MODULE"
            astrip src/$MODULE
            mkdir -p $TARGET/$ARCH_NAME/$BIN_TYPE
            cp src/$MODULE $TARGET/$ARCH_NAME/$BIN_TYPE/$MODULE
        done

    done

done
